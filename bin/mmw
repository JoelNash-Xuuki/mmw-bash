source $HOME/config
help(){
  echo "Welcome to MMW"
  echo "Usage: mmw [option]"
  echo "Options: "
  echo "  setProj"
}
setProj(){
  sed -i "s/PROJ=.*/PROJ=$1/g" $HOME/config
}

setProjLoc(){
  sed -i "s|PROJLOC=.*|PROJLOC=$1|g" $HOME/config
}

setSession(){
  sed -i "s|SESSION=session/.*|SESSION=session/$1|g" $HOME/config
  displaySession
}

displaySession(){
  echo $SESSION | grep -o '[0-9]'
}

displayProj(){
  echo $PROJ
}

deleteProj(){
  rm -r $PROJPATH
}

createProj(){
  if test -d $HOME/audio/; then
      echo "audio directory exists"
  else
    mkdir -p $HOME/audio/
    echo " audio directory created"
  fi

  if test -d $HOME/audio/$ARTIST; then
      echo "Artist directory exists"
  else
    mkdir -p $HOME/audio/$ARTIST;
    echo "Artist directory created"
  fi
  
  if test -d $PROJPATH; then
    echo "Directory exists"
  else
    read -p "$PROJPATH does not exist. Do you want to create it? (y/n): " choice
      if [[ $choice == "y" ]]; then
        mkdir $PROJPATH
        mkdir $HOME/audio/$ARTIST/$PROJ
        mkdir $HOME/audio/$ARTIST/$PROJ/stems
        ffmpeg -f lavfi -i anullsrc=channel_layout=stereo:sample_rate=48000 -t 5 $HOME/audio/$ARTIST/$PROJ/stems/input_1.wav
        mkdir $PROJPATH/src
        mkdir $PROJPATH/session
        mkdir $PROJPATH/session/1
        mkdir $PROJPATH/sound_design
        mkdir $PROJPATH/tmp
        echo "$PROJ created"
      else
        echo "$PROJ not created"
      fi
   fi
}
configRec(){
  # Set the variables
  tempo=$1
  instr_volume=$4
  drum_volume=$5
  
  # Generate the ecasound command
  ecasound_command="ecasound -n $PROJ -f:16,2,48000 \\"$'\n'
  ecasound_command+="  -a:instr -i $AUDIO$2$FILE -ea:$instr_volume \\"$'\n'
  ecasound_command+="  -a:2,3 -i jack,system,1,0 \\"$'\n'
  ecasound_command+="  -a:2 -o $AUDIO$3$FILE -ea:$drum_volume \\"$'\n'
  ecasound_command+="  -a:met -i:null -pn:metronome,$tempo -ea:1 \\"$'\n'
  ecasound_command+="  -a:instr,3,met -o jack,system"

  if [ -d "$PROJPATH/$SESSION" ]; then
    echo "$ecasound_command" > "$PROJPATH/$SESSION/rec.eca"
  else
    mkdir $PROJPATH/$SESSION
    echo "$ecasound_command" > "$PROJPATH/$SESSION/rec.eca"
  fi
    
  # Make the file executable
  chmod +x "$PROJPATH/$SESSION/rec.eca"
  cat $PROJPATH/$SESSION/rec.eca
}
rec(){
  $PROJPATH/$SESSION/rec.eca
}
configPlay(){
  # Set the variables
  tempo=$1
  instr_volume=$3
  
  # Generate the ecasound command
  ecasound_command="ecasound -n $PROJ -f:16,2,48000 \\"$'\n'
  ecasound_command+="  -a:instr -i $AUDIO$2$FILE -ea:$instr_volume \\"$'\n'
  ecasound_command+="  -a:all -o alsa \\"$'\n'

  if [ -d "$PROJPATH/$SESSION" ]; then
    echo "$ecasound_command" > "$PROJPATH/$SESSION/play.eca"
  else
    mkdir $PROJPATH/$SESSION
    echo "$ecasound_command" > "$PROJPATH/$SESSION/play.eca"
  fi
    
  # Make the file executable
  chmod +x "$PROJPATH/$SESSION/play.eca"
  cat $PROJPATH/$SESSION/play.eca
}
play(){
  $PROJPATH/$SESSION/play.eca
}

buildSheetMusic(){
  sheetbuilder $1 $2 $3 $4 $5 $6
}

createLyScoreAndMidiFile(){
  lilypond -dmidi-extension=mid $LILY
  mv $PROJ.mid $MIDI 
  mv $PROJ.pdf $PDF
  #lilypond-book --output=out --format=html $1.lytex
}

createSoundDesign(){
  modsyn $1 $2
}

renderAudio(){
  csound -d -o$PROJPATH/$PROJ.wav -F $PROJPATH/tmp/$PROJ.mid $PROJPATH/sound_design/$PROJ.csd
}

mvAudioToSite(){
  mv $PROJPATH/$PROJ.wav $HOME/Xuuki_Site_Node/site-app/public/audio/$PROJ.wav
}

convertAudio(){
  trackName="$1"
  channelNo="$2"  
  ffmpeg -i input_audio.wav -map_channel 0.$channelNo.0 $trackName.wav
}

createScorePDFandMIDI(){
  # originally used source $HOME/projects_/Flock/config
  lilypond -dmidi-extension=mid $LILY
  mv $PROJ.mid tmp/$PROJ.mid
  #lilypond-book --output=out --format=html $1.lytex
  echo "Created $LILY"
}

"$@"

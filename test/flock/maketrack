source ../tmp/config


#!/bin/bash

# Check if the user provided exactly two arguments
if [ $# -ne 2 ]; then
    echo "Usage: $0 <trackName> <channelNumber>"
    exit 1
fi

trackName="$1"
channelNo="$2"


trackNameOrc="
sr      =      48000
kr      =      480
ksmps   =      100
nchnls  =      1
0dbfs	=      1

garvb 	     	  init      0
gacmb	     	  init      0

instr     1801
ia 	  =         cpspch(p5)
ib 	  =         cpspch(p6)
idec      =         0.021
ipan      =         p7
kenv      expsegr   0.03, idec, p3, idec, 0.03
kfr       linseg    ia, p3*.5, ib, p3*.5, ib           ;p5 = FREQ OF LAST NOTE
asig      oscil     p4*kenv, kfr, 1001                 ;p6 = FREQ FOR THIS NOTE
          outs      asig*ipan, asig*(1-ipan) 
          endin

  instr      1010			
		  idec       =       0.021
		  kenv       expsegr 0.02, idec, 1, idec, 0.01
                  idur	     =	p3	
                  iamp	     =	p4	
                  ispd       =  p5
                  ;ipch      =  261.6256
	          iwave      =	p6	
                  ifpch      =	p7	
	  	  ifenv	     =	p8
	  	  iacc	     =	p9
		  ipan	     =	p10
		  ifpwm	     =	p11
		  ifvcf	     =  p12
	          ifres      =  p13		
		  ifsamp     =  p14
		  ifhpf	     =  p15
                  ifsampSpd  =  p16	
		  irvbsnd    =	p17
		  icmbsnd    =  p18
                  ilength    =	ftlen(ifpch)	
                  ilenv	     =	ftlen(ifenv)	
                  ilpwm	     =	ftlen(ifpwm)	
	  	  ilvcf      =  ftlen(ifvcf)
	  	  ires	     =  ftlen(ifres)
	  	  ilhpf      =  ftlen(ifvcf)
	  	  ilsamp     =  ftlen(ifsamp)
	  	  ilsampSpd  =  ftlen(ifsampSpd)
aclock	          phasor	1/idur
asampSpd          phasor	1/idur
kclock	          downsamp	aclock
ktpch	          table	kclock * ilength, ifpch, 0, 0, 1
atenv	          table	aclock * ilenv * ilength, ifenv, 0,0, 1
atacc	          table	aclock * ilength, iacc, 0, 0, 1
atpan	          table	aclock * ilength, ipan, 0, 0, 1
ktpwm	          table	kclock * ilpwm * ilength, ifpwm, 0, 0, 1
atvcf	          table	aclock * ilvcf, ifvcf, 0, 0, 1
atres	          table	aclock * ilpwm * ilength, ifpwm, 0, 0, 1
athpf	          table	aclock * ilhpf, ifhpf, 0, 0, 1
ilookup           tableng ifsamp

kindex            = 	     (ilookup/sr) * 1
iskip             =          int(p19*sr)          		      ; STARTING SAMPLE IN SECONDS
ilast             =          int(sr*p3*p20)+iskip 		      ; ENDING SAMPLE IN SECONDS
aread             line       iskip, p3, ilast    		      ; a-rate TABLE INDEX
aindex            phasor     1/kindex
phaseSet          = 	     0
                  aindex     = aindex + phaseSet




kpch	          =	     cpspch(ktpch)
asnd              tablei     aread, p14        		      	      ; SCANS FTABLE 1

; Adjust the values below to control the auto-tune effect
iScaleFactor = 0.1 ; Scale factor for the pitch correction (0.0 - 1.0)
iTimeConstant = 0.005 ; Time constant for the pitch correction (in seconds)

; Enable input and output
;aInL, aInR ins

; Apply auto-tune effect

ifftsize  = 2048
ioverlap  = ifftsize / 4
iwinsize  = ifftsize
iwinshape = 1	

; analysis the signal
fasndanal  pvsanal asnd, ifftsize, ioverlap, iwinsize, iwinshape
; get the
kfr, kamp pvspitch  fasndanal, 0.01

asnd pvsynth fasndanal


asamp 	          loscil     kenv*iamp, 261.6256*ktpch, p14, 261.6256, 0   
avco1	          vco	     1, kpch, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco2	          vco	     1, kpch * .994, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco	          =	     (avco1 + avco2)*0.01
ahp	          butterhp  asnd, athpf, 1000 
avcf	          moogvcf ahp, atvcf, 0 ;atres to be here but the sound peaks



;avcf	          = avcf * iamp * atenv * atacc
agate	          linseg	0, .015625, 1, idur - .03125, 1, .015625, 0


                  outs	avcf * (sqrt(1-atpan)) * agate, avcf *  sqrt(atpan) * agate

amix		  = avcf
garvb	          = garvb+(amix*irvbsnd)
gacmb	          = gacmb+(amix*icmbsnd)
                  endin


		  instr      1			
		  idec       =       0.021
		  kenv       expsegr 0.02, idec, 1, idec, 0.01
                  idur	     =	p3	
                  iamp	     =	p4	
                  ispd       =  p5
                  ;ipch      =  261.6256
	          iwave      =	p6	
                  ifpch      =	p7	
	  	  ifenv	     =	p8
	  	  iacc	     =	p9
		  ipan	     =	p10
		  ifpwm	     =	p11
		  ifvcf	     =  p12
	          ifres      =  p13		
		  ifsamp     =  p14
		  ifhpf	     =  p15
                  ifsampSpd  =  p16	
		  irvbsnd    =	p17
		  icmbsnd    =  p18
                  ilength    =	ftlen(ifpch)	
                  ilenv	     =	ftlen(ifenv)	
                  ilpwm	     =	ftlen(ifpwm)	
	  	  ilvcf      =  ftlen(ifvcf)
	  	  ires	     =  ftlen(ifres)
	  	  ilhpf      =  ftlen(ifvcf)
	  	  ilsamp     =  ftlen(ifsamp)
	  	  ilsampSpd  =  ftlen(ifsampSpd)
aclock	          phasor	1/idur
asampSpd          phasor	1/idur
kclock	          downsamp	aclock
ktpch	          table	kclock * ilength, ifpch, 0, 0, 1
atenv	          table	aclock * ilenv * ilength, ifenv, 0,0, 1
atacc	          table	aclock * ilength, iacc, 0, 0, 1
atpan	          table	aclock * ilength, ipan, 0, 0, 1
ktpwm	          table	kclock * ilpwm * ilength, ifpwm, 0, 0, 1
atvcf	          table	aclock * ilvcf, ifvcf, 0, 0, 1
atres	          table	aclock * ilpwm * ilength, ifpwm, 0, 0, 1
athpf	          table	aclock * ilhpf, ifhpf, 0, 0, 1
ilookup           tableng ifsamp
kindex            = 	     (ilookup/sr) * 1
iskip             =          int(p19*sr)          		      ; STARTING SAMPLE IN SECONDS
ilast             =          int(sr*p3*p20)+iskip 		      ; ENDING SAMPLE IN SECONDS
aread             line       iskip, p3, ilast    		      ; a-rate TABLE INDEX
aindex            phasor     1/kindex
phaseSet          = 	     0
                  aindex     = aindex + phaseSet
                  ;aindex    = aindex * ilookup
                  ;asamp     table aindex, ifsamp, 1
                  ;asamp     = asamp * iamp
kpch	          =	     cpspch(ktpch)
asnd              tablei     aread, p14        		      	      ; SCANS FTABLE 1
asamp 	          loscil     kenv*iamp, 261.6256*ktpch, p14, 261.6256, 0   
avco1	          vco	     1, kpch, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco2	          vco	     1, kpch * .994, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco	          =	     (avco1 + avco2)*0.01
ahp	          butterhp  asamp, athpf, 1000 
avcf	          moogvcf ahp, atvcf, 0 ;atres to be here but the sound peaks
agate	          linseg	0, .015625, 1, idur - .03125, 1, .015625, 0
                  outs	avcf * (sqrt(1-atpan)) * agate, avcf *  sqrt(atpan) * agate
amix		  = avcf
garvb	          = garvb+(amix*irvbsnd)
gacmb	          = gacmb+(amix*icmbsnd)
                  endin

		  instr      5555			
		  idec       =       0.021
		  kenv       expsegr 0.02, idec, 1, idec, 0.01
                  idur	     =	p3	
                  iamp	     =	p4	
                  ispd       =  p5
                  ;ipch      =  261.6256
	          iwave      =	p6	
                  ifpch      =	p7	
	  	  ifenv	     =	p8
	  	  iacc	     =	p9
		  ipan	     =	p10
		  ifpwm	     =	p11
		  ifvcf	     =  p12
	          ifres      =  p13		
		  ifsamp     =  p14
		  ifhpf	     =  p15
                  ifsampSpd  =  p16	
		  irvbsnd    =	p17
		  icmbsnd    =  p18
                  ilength    =	ftlen(ifpch)	
                  ilenv	     =	ftlen(ifenv)	
                  ilpwm	     =	ftlen(ifpwm)	
	  	  ilvcf      =  ftlen(ifvcf)
	  	  ires	     =  ftlen(ifres)
	  	  ilhpf      =  ftlen(ifvcf)
	  	  ilsamp     =  ftlen(ifsamp)
	  	  ilsampSpd  =  ftlen(ifsampSpd)
aclock	          phasor	1/idur
asampSpd          phasor	1/idur
kclock	          downsamp	aclock
ktpch	          table	kclock * ilength, ifpch, 0, 0, 1
atenv	          table	aclock * ilenv * ilength, ifenv, 0,0, 1
atacc	          table	aclock * ilength, iacc, 0, 0, 1
atpan	          table	aclock * ilength, ipan, 0, 0, 1
ktpwm	          table	kclock * ilpwm * ilength, ifpwm, 0, 0, 1
atvcf	          table	aclock * ilvcf, ifvcf, 0, 0, 1
atres	          table	aclock * ilpwm * ilength, ifpwm, 0, 0, 1
athpf	          table	aclock * ilhpf, ifhpf, 0, 0, 1
ilookup           tableng ifsamp

kindex            = 	     (ilookup/sr) * 1
iskip             =          int(p19*sr)          		      ; STARTING SAMPLE IN SECONDS
ilast             =          int(sr*p3*p20)+iskip 		      ; ENDING SAMPLE IN SECONDS
aread             line       iskip, p3*ispd, ilast    		      ; a-rate TABLE INDEX

aindex            phasor     1/kindex
phaseSet          = 	     0
                  aindex     = aindex + phaseSet
                  ;aindex    = aindex * ilookup
                  ;asamp     table aindex, ifsamp, 1
                  ;asamp     = asamp * iamp
kpch	          =	     cpspch(ktpch)
asnd              tablei     aread, p14        		      	      ; SCANS FTABLE 1
asamp 	          loscil     kenv*iamp, 261.6256*ktpch, p14, 261.6256, 0   
avco1	          vco	     1, kpch, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco2	          vco	     1, kpch * .994, iwave, ktpwm, 1, 1/(cpspch(7.00))
avco	          =	     (avco1 + avco2)*0.01
ahp	          butterhp  (asnd*iamp)*atenv, athpf, 1000 

avcf	          moogvcf ahp, atvcf, 0 ;atres to be here but the sound peaks
asig 		  = avcf*iamp

;avcf	          = avcf * iamp * atenv * atacc
agate	          linseg	0, .015625, 1, idur - .03125, 1, .015625, 0
                  outs	asig * (sqrt(1-atpan)) * agate, asig *  sqrt(atpan) * agate
amix		  = avcf
garvb	          = garvb+(amix*irvbsnd)
gacmb	          = gacmb+(amix*icmbsnd)
                  endin

		  instr 201               
iamp	  	  =	      p4
iskip             =           int(p5*sr)          		      ; STARTING SAMPLE IN SECONDS
ilast             =           int(sr*p3*p6)+iskip 		      ; ENDING SAMPLE IN SECONDS
idec              =           0.020
kenv              linseg      0, .05, iamp, p3-.51, iamp, .02, 0     ; ENV FUNCTION
aread             line        iskip, p3, ilast    		      ; a-rate TABLE INDEX
;aread            line        ilast, p3, iskip    		      ; OPTIONAL: ilast TO iskip READS BACKWARD
asnd              tablei      aread, p7        		      	      ; SCANS FTABLE 1

asig              =           asnd*kenv           		      ; IMPOSES ENVELOPE
                  outs        asig, asig
                  endin

		  instr	        198
idur		  =		p3	
itime		  =		p4
iloop		  =		p5
kenv		  linen	        1, .01, idur, .01	
acomb		  comb		gacmb, itime, iloop, 0
		  outs		acomb, acomb
gacmb		  =		0

		  endin

	          instr 	199
idur	          =	p3					
irvbtim	          =	p4
ihiatn	          =	p5
arvb	          nreverb	garvb, irvbtim, ihiatn
	         	outs	arvb, arvb
garvb	          =	0
	          endin
"

echo "$trackNameOrc" > $trackName.orc

trackNameSco="
f1	0	8192	10	1							
;Notes
f100 0 8 -2	7.00 7.03 7.02 7.06	7.05 7.09 7.08 7.12
f101 0 4 02	6.04 6.08 6.11 7.04				

;Envelopes
f200 0 8192	-7 	0.5 4096 1 4096 1			
f201 0 8192 	-5   	.01 128 1  8054  1	
f202 0 8192 	-5   	.01 256 1  7926  1	

;Volume play
f300 0 8 -2	1 1	1 1	1 1	1 1
f301 0 4 -2	2 1	1 1	     		
f302 0 8 -2	2 0	1 0	1 0	2 0

;Pan
f400 0 7 -2	1 0	1 .25 .75 0	.5 .25
f401 0 1 -2	0.5
f402 0 5 -2	0 0.5 1 0.5 0  

;pwm
f500 0 8192	-7 1 8192 0					
f501 0 8192	-7 1 4096 0	4096 1

;VCF
f600 0 8192	-7	500	 8192	6000					
f601 0 1 -2	10000
f602 0 1 -2	1000

;Res
f700 0 8 -2	.1 .1 .1 .1	.1 .1 .1 .1
f701 0 8192	-7 .9 8192 0					
f702 0 8192	-5 .8 4096 .2 4096 .8

;HPF
f901 0 1 -2	100

;PCH
f9001 0 1 -2	1
f9002 0 512  -5  .001 64 1 442 1 6 .001			
f9003 0 512  -5  0.9 64 1 221 0.99 221 1 6 2			
f9004 0 512  -5  0.9 32 0.999 32 1  215 1 3 1.00 4 1 122 0.999 70 0.99 15 0.9 15 0.1
f9006 0 2 -2	0.9 0.5  
f9005 0 512  -5  0.001 64 1 221 1 191 1 36 .001			
f9007 0 1 -2	1.2  
f9014 0 1 -2	1.9  
f9015 0 1 -2	1.05 
f9016 0 1 -2	0.5 
f9008 0 1 -2	1.01  
f9009 0 1 -2	2
f9010 0 1 -2	2.01
f9011 0 1 -2	0.99
f9012 0 1 -2	0.97
f9013 0 1 -2	0.95

f111 0 1024 10 1
f1001 0   8193    10  1

; Load proj wav file and point to each channel
f1002 0 0 1 \"$WAV\" 0 4 $channelNo; 

; Read the tempo value from the environment variable using f-table

t 0 p4 ; tempo

i199 0 $LENGTH 2.856 0.914 ;reverb
i198 0 $LENGTH 0.714 0.914 ;delay
i1   0 $LENGTH 0.55  1 100 9001 200 300 401 500 601 700 1002 901 9003 0 0 0 0 ;
s

; empty tables
;f-1002 0 0 1 "/home/joel/audio/202210030854-idea.wav"         [0.714*4] 4 2 ; Harmony 
"

echo "$trackNameSco" > $trackName.sco

trackExe="
source ../tmp/config
csound -o$trackName.wav -t$TEMPO $trackName.orc $trackName.sco
"

echo "$trackExe" > $trackName
chmod +x $trackName

trackNameEWF="
source = $trackName.wav
offset = 0
start-position = 0
length = $LENGTH
looping = false
"

echo "$trackNameEWF" > $trackName.ewf
